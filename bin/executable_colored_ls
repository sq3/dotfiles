#!/usr/bin/perl -w
use strict;

# This script is meant to be used together with "l_plain". Default "ls"
# won't work.

my $COL_BOLD = "\e[1m";
my $COL_RESET = "\e[0m";
my $COL_BLACK_BRIGHT = "\e[38;5;8m";
my $COL_RED = "\e[38;5;1m";
my $COL_GREEN = "\e[38;5;2m";
my $COL_GREEN_BRIGHT = "\e[38;5;10m";
my $COL_BROWN = "\e[38;5;3m";
my $COL_BROWN_BRIGHT = "\e[38;5;11m";
my $COL_BLUE = "\e[38;5;4m";
my $COL_BLUE_BRIGHT = "\e[38;5;12m";
my $COL_MAGENTA = "\e[38;5;5m";
my $COL_CYAN = "\e[38;5;6m";
my $COL_WHITE = "\e[38;5;7m";
my $COL_LINE = "\e[38;5;8m";
my $total = "";

while (<>)
{
	chomp($_);

	my @toks;
	if ($_ =~ m/^total .+[^:]$/)
	{
		$total = $_;
		next;
	}
	elsif ($_ =~ m/^(c|b)(...)(...)(...)([ +]?)( +[^ ]+)( +[^ ]+)( +[^ ]+)( +[^,]+, +[^ ]+)(  ....-..-..| ..-.. ..:..)(.*)/
		|| $_ =~ m/^(.)(...)(...)(...)([ +]?)( +[^ ]+)( +[^ ]+)( +[^ ]+)( +[^ ]+)(  ....-..-..| ..-.. ..:..)(.*)/)
	{
		@toks = ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11);
	}

	if (!defined($toks[0]))
	{
		print $_ . "\n";
		next;
	}

	$toks[0] =~ s/[^-]/$COL_BLUE$&$COL_RESET/g;
	$toks[1] =~ s/[^-]/$COL_BROWN$&$COL_RESET/g;
	$toks[2] =~ s/[^-]/$COL_CYAN$&$COL_RESET/g;
	$toks[3] =~ s/[^-]/$COL_GREEN$&$COL_RESET/g;

	for (my $i = 0; $i <= 3; $i++)
	{
		$toks[$i] =~ s/-/$COL_LINE─$COL_RESET/g;
	}

	if ($toks[9] =~ m/:/)
	{
		$toks[9] = $COL_BOLD . $COL_BLUE_BRIGHT . $toks[9];
	}
	else
	{
		$toks[9] = $COL_BLUE . $toks[9];
	}

	print
	$toks[0] .
	$toks[1] .
	$toks[2] .
	$toks[3] .
	$COL_RED . $toks[4] .
	$COL_RED . $toks[5] .
	$COL_BOLD . $COL_BROWN_BRIGHT . $toks[6] . $COL_RESET .
	$COL_BROWN . $toks[7] .
	$COL_GREEN_BRIGHT . $toks[8] . $COL_RESET .
	$toks[9] . $COL_RESET .
	$COL_LINE . " │" . $COL_RESET .
	$toks[10] . $COL_RESET . "\n";
}

if ($total ne "")
{
	print $COL_BLACK_BRIGHT . $total . $COL_RESET . "\n";
}
